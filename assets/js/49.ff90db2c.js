(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{330:function(t,r,n){"use strict";n.r(r);var s=n(14),a=Object(s.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"核心高频"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#核心高频"}},[t._v("#")]),t._v(" 核心高频")]),t._v(" "),r("h2",{attrs:{id:"闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),r("ul",[r("li",[r("ol",[r("li",[t._v("概念：函数A返回函数B，其中函数B使用了函数A中的变量，那么函数B就被称为闭包。(嵌套函数使用了父级中的变量，它就是闭包，"),r("strong",[t._v("导致父级的变量不能被释放回收")]),t._v(")")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[t._v("使用let创造出块级作用域，就可以不使用闭包了。")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"3"}},[r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6971727286856843295",target:"_blank",rel:"noopener noreferrer"}},[t._v("那些高级/资深的前端是如何回答JavaScript面试题的 "),r("OutboundLink")],1),t._v(" -- 闭包 (后面的评论值得一读，看看大家的想法)"),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[t._v("闭包的底层实现原理 todo \n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("【环境分三类、周期两阶段创建和执行")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、预编译四部曲、创建"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),t._v("三步骤】\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("执行上下文：代码的运行环境和代码的预编译都是在这里。  \n     "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("、分为三类：全局执行上下文、函数执行上下文、eval执行上下文（可以忽略）  \n     "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v("、执行上下文的周期分为两个阶段：    \n          创建阶段：创建词法环境；生成变量对象（"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),t._v("），"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("建立作用域链"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("；  \n          执行阶段：变量赋值，函数引用，执行代码 \n     "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),t._v(" 预编译发生在函数执行之前，分为四部曲\n          创建"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),t._v("对象\n          找形参和变量声明，将形参和变量作为"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),t._v("属性名，值为"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("。\n          将实参和形参相统一\n          在函数体里找到函数声明，值赋予函数体\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、概念阐述：变量对象"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),t._v("\n     "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v("、"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("引擎在内存中新建的对象，用来存储当前执行环境的变量。\n     "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v("、变量对象"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),t._v("的创建过程（三步）：\n          创建arguments对象；（原来是这个意思！！！ "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("20220108")]),t._v("晚 百度大厦"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F4")]),t._v("）\n          当遇到同名的函数时，后面的会覆盖前面的。\n          检查当前环境中的声明变量并赋值为"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("，当遇到同名的函数声明，为了避免函数被赋值为"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("，则会忽略此变量声明。\n     "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v("、变量对象变为活动对象\n          发生在执行上下文的第二个节点，即执行阶段。\n     "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.4")]),t._v("、词法作用域：查找变量的过程\n     "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),t._v("、EventLoop、调用栈、执行栈 todo\n          "),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MDN")]),t._v("上都没有执行栈这种叫法，只有调用栈的术语解释\n")])])])])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"4"}},[r("li",[t._v("这道题如果全面深刻掌握了，JS基础也就稳了。（20220108 百度大厦F4 烛下海棠）")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"5"}},[r("li",[t._v("TODO 20220109"),r("br"),t._v("\n5.1、闭包的使用场景")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"6"}},[r("li",[t._v("调用栈call stack：是解释器追踪函数执行流的一种机制。重点是"),r("strong",[t._v("栈")]),t._v("，先进后出。"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Call_stack",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN call stack"),r("OutboundLink")],1)])])])]),t._v(" "),r("h2",{attrs:{id:"break-vs-continue-vs-return"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#break-vs-continue-vs-return"}},[t._v("#")]),t._v(" break VS continue VS return")]),t._v(" "),r("ul",[r("li",[r("ol",[r("li",[t._v("break和continue只能用在循环或switch里面"),r("br"),t._v("\nbreak是跳出当前循环语句，不再执行循环；"),r("br"),t._v("\ncontinue是仅仅跳出当前本次循环，继续执行下次循环；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[t._v("return只能用在函数体内，而且仅仅对当前函数生效。"),r("br"),t._v("\nreturn false 返回错误处理结果，终止执行，阻止表单事件和事件默认事件"),r("br"),t._v("\nreturn true 返回正确结果，终止执行"),r("br"),t._v("\nreturn 把控制权返回给页面")])])])]),t._v(" "),r("p",[t._v("参链：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/roashley/p/7752401.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("js中的break,continue和return到底怎么用？"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("总结：")]),t._v(" "),r("ul",[r("li",[t._v("系统性学习 + 点缀性笔记，书籍、系统网课。（20200316晨）")])]),t._v(" "),r("h2",{attrs:{id:"object-prototype-tostring-call-obj"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-tostring-call-obj"}},[t._v("#")]),t._v(" Object.prototype.toString.call(obj)")]),t._v(" "),r("p",[t._v("为什么用Object.prototype.toString.call(obj)检测对象类型？")]),t._v(" "),r("ul",[r("li",[r("ol",[r("li",[t._v("用typeof不能判断一个对象变量，因为null和数组的结果也是object。")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[t._v("xxx.toString方法"),r("strong",[t._v("返回反映这个对象类型的字符串")]),t._v("。")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"3"}},[r("li",[t._v("不能直接使用obj.toString()的原因，因为toString为Object的原型方法，而Array、Function等类型作为Object的实例，都重写了toString方法。不同的对象类型调用toString方法时，根据原型链的知识，调用的是对应的重写之后的toString方法(Function类型返回内容为函数体的字符串，Array类型返回元素组成的字符串)，而不会去调用Object上原型toString方法。")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"4"}},[r("li",[t._v("通过call将Array的this上下文切换到Object，从而调用了Object.prototype.toString()。")])])])]),t._v(" "),r("p",[t._v("参链：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/youhong/p/6209054.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么用Object.prototype.toString.call(obj)检测对象类型?"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"典型真题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#典型真题"}},[t._v("#")]),t._v(" 典型真题")]),t._v(" "),r("ol",[r("li",[t._v("基本类型Symbol"),r("br"),t._v("\n用 Symbol 的最常见场景就是可以用来"),r("strong",[t._v("模拟私有属性或方法")]),t._v("了，弥补了 JS 没有 OOP 语言常见的 private、public 这种可见性修饰符的不足。")]),t._v(" "),r("li",[t._v("JS数据类型 8种"),r("br"),t._v(" "),r("a",{attrs:{href:"https://blog.csdn.net/u013592575/article/details/95087953",target:"_blank",rel:"noopener noreferrer"}},[t._v("仅供参链："),r("OutboundLink")],1),t._v(" 要回本溯源 todo 20220109"),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v("、Number、String、Boolean、"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("、Null、Object、Symbol（"),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ES6")]),t._v("新增）、bigInt（谷歌"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),t._v("，安全存储，操作大整数）  \n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v("、Object包含了哪几种？"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("Data、Function、Array"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("  \n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v("、基本类型和引用类型：  \n     基本类型：Number、String、Boolean、"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("、Null  \n     引用类型：Object\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.4")]),t._v("、"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("是Number中的一种，非Number。\n")])])]),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt",target:"_blank",rel:"noopener noreferrer"}},[t._v("bigInt官链"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=a.exports}}]);