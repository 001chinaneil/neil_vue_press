(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{334:function(t,a,v){"use strict";v.r(a);var _=v(14),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览缓存专题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览缓存专题"}},[t._v("#")]),t._v(" 浏览缓存专题")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[a("strong",[t._v("口诀")]),t._v("：先强后协商，强缓存（1.0Expires、1.1Cache-Control）、协商缓存（Last-Modified[基于时间]、ETag[基于内容]）、缓存位置（Service Worker、Memory Cache、Disk Cache、Push Cache）")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("官链："),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cache-Control MDN"),a("OutboundLink")],1)])])])]),t._v(" "),a("h2",{attrs:{id:"强缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("缓存作用分两种情况，一种不用发送HTTP请求，一种需要发送HTTP请求")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("强缓存不需要发送HTTP请求")]),t._v("，通过检查字段得出（HTTP1.0是Expires，HTTP1.1是 Cache-Control）")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("Expires采用过期时间，"),a("strong",[t._v("缺点是服务器返回时间和浏览器自身时间可能不一致")]),t._v("，在1.1被废弃")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("Cache-Control采用缓存时长，有6大属性")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Cache-Control的字段名")]),t._v(" "),a("th",[t._v("代表的含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("max-age")]),t._v(" "),a("td",[t._v("最大缓存时间，单位秒")])]),t._v(" "),a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("客户端和代理服务器都可以缓存数据，直接这个就行")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("客户端可以缓存数据，中间代理服务器不能缓存数据，直接这个就行")])]),t._v(" "),a("tr",[a("td",[t._v("no-cache")]),t._v(" "),a("td",[t._v("跳过强缓存，发送HTTP请求，进入协商缓存，直接这个就行")])]),t._v(" "),a("tr",[a("td",[t._v("no-store")]),t._v(" "),a("td",[t._v("不进行任何缓存，直接这个就行")])]),t._v(" "),a("tr",[a("td",[t._v("s-maxage")]),t._v(" "),a("td",[t._v("代理服务器的缓存时间，单位秒")])])])]),t._v(" "),a("h2",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("概念：强缓存失效后，浏览器请求头中携带相应的"),a("strong",[t._v("缓存tag")]),t._v("，服务器据此进行判断是否返回缓存。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("缓存tag分为2种："),a("code",[t._v("Last-Modified和ETag")]),t._v("，都是指的响应头。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("Last-Modified：第一次请求后，响应头中会加上这个字段；再次请求时，请求头会加上"),a("code",[t._v("If-Modified-Since")]),t._v("，值为返回的值；服务器在接收到"),a("code",[t._v("If-Modified-Since")]),t._v("的值和资源的Last-Modified值进行对比，如果小于则返回新资源，否则"),a("strong",[t._v("返回304，告诉浏览器直接用缓存")]),t._v("。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("ETag：服务器根据当前文件内容，生成唯一标志，在响应头中返回这个值。浏览器在接收到这个值后，下次请求会在请求头的"),a("code",[t._v("If-None-Match")]),t._v("中带上这个值；服务器接收到这个值后进行对比，如果不同则返回新资源，否则"),a("strong",[t._v("返回304，告诉浏览器直接用缓存")]),t._v("。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"5"}},[a("li",[t._v("Last-Modified比ETag精确度略差的原因：1）编辑文件，但是内容没变，也会导致缓存失效。2）精确度是秒，如果在1s内更改多次，也是察觉不到的。")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("精确度")]),t._v(" "),a("th",[t._v("性能")]),t._v(" "),a("th",[t._v("优先级")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Last-Modified")]),t._v(" "),a("td",[t._v("差")]),t._v(" "),a("td",[t._v("高")]),t._v(" "),a("td",[t._v("低")])]),t._v(" "),a("tr",[a("td",[t._v("ETag")]),t._v(" "),a("td",[t._v("高")]),t._v(" "),a("td",[t._v("差")]),t._v(" "),a("td",[t._v("高")])])])]),t._v(" "),a("p",[t._v("思考总结：")]),t._v(" "),a("ol",[a("li",[t._v("请求头和响应头这些字段是谁在控制？服务器、浏览器？"),a("br"),t._v("\n是的，响应头是服务器在控制，请求头是浏览器（代码请求）在控制")]),t._v(" "),a("li",[t._v("采用HTTP几是谁在控制？怎么判断是哪个版本的HTTP协议？\n控制面板，在status上右键选Protocol，可以看到各个请求基于什么版本了。"),a("br"),t._v("\n采用HTTP几是谁在控制？服务器具有决定权，由HTTP报文的起始行决定。")]),t._v(" "),a("li",[t._v("todo 突然有了一种想学一门后端语言的冲动，想看看后端逻辑和服务器是怎么回事儿。20220115 铭科苑")])]),t._v(" "),a("h2",{attrs:{id:"缓存位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置"}},[t._v("#")]),t._v(" 缓存位置")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("浏览器缓存位置分4种，优先级从高到低是：Service Worker、Memory Cache、Disk Cache、Push Cache")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("Service Worker：即让JS运行在主线程之外，支撑的功能："),a("code",[t._v("离线缓存")]),t._v("、"),a("code",[t._v("消息推动")]),t._v("、"),a("code",[t._v("网络代理")]),t._v("，也是PWA的重要实现机制。TODO拓展")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("Memory Cache：内存缓存，速度最快，但是时间最短，渲染进程结束后，内存缓存就也失效了。（TODO：那什么时候渲染进程结束？）")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("Disk Cache：硬盘缓存，速度相对较慢，优点是存储量大和时间长。"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.1")]),t._v(" 分配策略如下：\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）如果大文件"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("放硬盘，反之放内存；\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）内存占用率高的时候放硬盘；\n")])])])])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"5"}},[a("li",[t._v("Push Cache：HTTP2的内容 "),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fjakearchibald.com%2F2017%2Fh2-push-tougher-than-i-thought%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩展文件："),a("OutboundLink")],1)])])])]),t._v(" "),a("p",[t._v("疑问TODO：不能在拓展了吗？具体存储在什么位置？文件目录什么的")]),t._v(" "),a("p",[t._v("思考总结：")]),t._v(" "),a("ol",[a("li",[t._v("长连接（HTTP1.1）和多路复用（HTTP2.0）的区别？"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("长连接讲的是同域名下的一个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("连接的复用，是串行，受"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("个并发数量的限制。\n多路复用是同域名下一个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("连接的复用，但是是并行。（应该还可以拓展，比如单个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("连接中并行数量的限制）\n")])])])]),t._v(" "),a("li",[t._v("为什么有的图片有内存缓存，有的却不走呢？"),a("br"),t._v("\nTODO（eg: https://tf.zuoyebang.com/static/hy/cornucopia/kmcloo22.html）")])])])}),[],!1,null,null,null);a.default=s.exports}}]);