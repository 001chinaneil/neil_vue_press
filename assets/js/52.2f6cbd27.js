(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{336:function(t,e,a){"use strict";a.r(e);var s=a(14),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),e("h2",{attrs:{id:"一、响应式原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、响应式原理"}},[t._v("#")]),t._v(" 一、响应式原理")]),t._v(" "),e("ul",[e("li",[t._v("口诀：订阅(Dep.addSub)=》发布(Dep.notify)；defineProperty数据代理，Dep对象收集依赖、Watcher对象更新视图；")])]),t._v(" "),e("ol",[e("li",[t._v("从 new Vue 开始，首先通过 get、set 监听 Data 中的数据变化，同时创建 Dep 用来搜集使用该 Data 的 Watcher。")]),t._v(" "),e("li",[t._v("编译模板，创建 Watcher，并将 Dep.target 标识为当前 Watcher。")]),t._v(" "),e("li",[e("strong",[t._v("编译模板时")]),t._v("，如果使用到了 Data 中的数据，就会触发 Data 的 get 方法，然后"),e("strong",[t._v("调用 Dep.addSub 将 Watcher 搜集起来")]),t._v("。")]),t._v(" "),e("li",[e("strong",[t._v("数据更新时")]),t._v("，会触发 Data 的 set 方法，然后"),e("strong",[t._v("调用 Dep.notify 通知所有使用到该 Data 的 Watcher 去更新 DOM")]),t._v("。"),e("br"),t._v("\ntips: "),e("strong",[t._v("Dep 对象用于依赖收集")]),t._v("，它实现了一个发布订阅模式，完成了数据 Data 和渲染视图 Watcher 的订阅/发布。")])]),t._v(" "),e("p",[t._v("参链："),e("br"),t._v(" "),e("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入响应式原理"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"二、异步更新或者nexttick原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、异步更新或者nexttick原理"}},[t._v("#")]),t._v(" 二、异步更新或者nextTick原理")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("Data 对象：Vue模板的 data 方法中返回的对象。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("Dep 对象：每一个 Data 属性都会创建一个 Dep，用来搜集所有使用到这个 Data 的 Watcher 对象。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("Watcher 对象：主要用于渲染 DOM。")])])])]),t._v(" "),e("h3",{attrs:{id:"更新过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新过程"}},[t._v("#")]),t._v(" 更新过程")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("何时可以获取更新后的Dom：Vue的nextTick()回调中。")])]),t._v(" "),e("li",[e("p",[t._v("Vue在利用Watcher更新视图时，并不是直接更新，而是把Watcher对象放到队列里，具体更新视图的方法"),e("strong",[t._v("flushSchedulerQueue")]),t._v("，放入nextTick里面进行调用。")])]),t._v(" "),e("li",[e("p",[t._v("this.$nextTick()其实就是源码中的nextTick()，只是Vue.prototype.$nextTick = function(){ return nextTick(fn,this) }，"),e("strong",[t._v("本质是对JavaScript执行原理EventLoop的一种应用")]),t._v("。")])]),t._v(" "),e("li",[e("p",[t._v("由于 nextTick 只是单纯通过 Promise 、SetTimeout 等方法模拟的"),e("strong",[t._v("异步任务")]),t._v("，\n所以也可以手动执行一个异步任务，来实现和 this.$nextTick 相同的效果。")])]),t._v(" "),e("li",[e("p",[t._v("为什么要异步进行回调？是为了提高性能吗？防止卡顿？是")])]),t._v(" "),e("li",[e("p",[t._v("口诀：Watcher入队列，异步任务nextTick")])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 修改 Vue 中的 Data 时，就会触发所有和这个 Data 相关的 Watcher 进行更新。\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 首先，会将所有的 Watcher 加入队列 Queue（原因是：避免重复计算和不必要的"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("操作）。\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 然后，调用 nextTick 方法，执行异步任务。\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 在异步任务的回调中，对 Queue 中的 Watcher 进行排序，然后执行对应的 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 更新。\n")])])]),e("p",[t._v("参链：\n"),e("a",{attrs:{href:"https://juejin.cn/post/7021688091513454622",target:"_blank",rel:"noopener noreferrer"}},[t._v("一次弄懂 Vue2 和 Vue3 的 nextTick 实现原理"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"三、diff算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、diff算法"}},[t._v("#")]),t._v(" 三、diff算法")]),t._v(" "),e("ul",[e("li",[t._v("源码位置：node_modules/vue/src/core/vdom/patch.js")])]),t._v(" "),e("ol",[e("li",[t._v("概念：虚拟DOM是为了解决浏览器性能问题而出现的，比如JS计算比DOM渲染要快、重排重绘、移动端参数不同")]),t._v(" "),e("li",[t._v("流程：(模拟Dom、对比新旧、差异渲染)"),e("br"),t._v("\n2.1 用JavaScript模拟Dom树，并渲染Dom树；"),e("br"),t._v("\n2.2 比较新旧Dom对象，得到差异对象；"),e("br"),t._v("\n2.3 把差异对象引用到渲染Dom树；")]),t._v(" "),e("li",[t._v("diff算法策略：深度优先，同层比较")]),t._v(" "),e("li",[t._v("diff算法比较细节："),e("br"),t._v("\n总得来说两个节点的比较策略就是：先看看双方是否都有孩子，如果都有则比较孩子；如果新节点有，旧节点没有孩子则是一种处理；旧节点有，新节点没有孩子是另一种处理，都没有则又是一种处理。")]),t._v(" "),e("li",[t._v("Key就是为了更高效的更新新旧差异虚拟Dom")])]),t._v(" "),e("p",[t._v("参链："),e("br"),t._v(" "),e("a",{attrs:{href:"https://blog.csdn.net/qq_39414417/article/details/104763824",target:"_blank",rel:"noopener noreferrer"}},[t._v("[Vue的diff算法详解和key作用(较详细)]"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"四、双向绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、双向绑定"}},[t._v("#")]),t._v(" 四、双向绑定")]),t._v(" "),e("ul",[e("li",[t._v("视图更新数据，数据更新视图。\n单项绑定过程(自己总结的)：")])]),t._v(" "),e("ol",[e("li",[t._v("变量变了，由set发通知给watcher；")]),t._v(" "),e("li",[t._v("watcher告知虚拟DOM树，叫它该比较了，我这有值变了；")]),t._v(" "),e("li",[t._v("于是生成新的dom树进行一个比较，然后逐级分类比较，比较出哪个元素发生变化就把这个元素更新到页面，这就是单项数据绑定原理。")]),t._v(" "),e("li",[t._v("v-model原理其实就是给input事件绑定oninput事件，就会立刻调用底层对象对应的setter方法，改变data里的属性的值，从而实现双向数据绑定。")])]),t._v(" "),e("p",[t._v("参链："),e("br"),t._v(" "),e("a",{attrs:{href:"https://juejin.cn/post/6844904015516401678",target:"_blank",rel:"noopener noreferrer"}},[t._v("用自己的话总结vue双向绑定数据原理"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"五、rouer机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、rouer机制"}},[t._v("#")]),t._v(" 五、Rouer机制")]),t._v(" "),e("ol",[e("li",[t._v("核心：更新视图，但不重新请求页面；浏览器：hash\\history，Node：abstract")]),t._v(" "),e("li",[t._v("hashHistory")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("$router"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用方法")]),t._v("\n \nHashHistory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据hash模式调用,设置hash并添加到浏览器历史记录（添加到栈顶）（window.location.hash= XXX）")]),t._v("\nHistory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("transitionTo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//监测更新，更新则调用History.updateRoute()")]),t._v("\nHistory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateRoute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更新路由")]),t._v("\n \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_route"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//替换当前app路由")]),t._v("\nvm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更新视图")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[e("strong",[t._v("利用location.hash属性读取")]),t._v("，每次变化，都会在浏览器历史栈里面新增记录，却并不会给后端发请求。")])]),t._v(" "),e("li",[e("p",[t._v("利用Vue.mixin()方法来实现混入，影响注册的所有组件，"),e("strong",[t._v("beforeCreate钩子")]),t._v("之后通过 "),e("strong",[t._v("Vue.utils.defineReactive()")]),t._v(" 定义响应式的_router属性")])])]),t._v(" "),e("p",[t._v("参链："),e("br"),t._v(" "),e("a",{attrs:{href:"https://blog.csdn.net/qq_27674439/article/details/99821474",target:"_blank",rel:"noopener noreferrer"}},[t._v("弄懂vue-router的实现原理"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/27588422",target:"_blank",rel:"noopener noreferrer"}},[t._v("【源码拾遗】从vue-router看前端路由的两种实现"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"六、vuex原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六、vuex原理"}},[t._v("#")]),t._v(" 六、Vuex原理")]),t._v(" "),e("ol",[e("li",[t._v("利用Vue的插件机制，Vue.use()进行install，applyMixin()")]),t._v(" "),e("li",[t._v("Vuex的state状态是响应式，是借助vue的data是响应式，将state存入vue实例组件的data中；Vuex的getters则是借助vue的计算属性computed实现数据实时监听。")])]),t._v(" "),e("p",[t._v("总结：浏览器路由底层的支撑，此有了应用侧繁花似锦的呈现。\n参链："),e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/78981485",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vuex从使用到原理解析"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"七、vue2和vue3的差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#七、vue2和vue3的差异"}},[t._v("#")]),t._v(" 七、Vue2和Vue3的差异")]),t._v(" "),e("ol",[e("li",[t._v("速度更快："),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("、重写了虚拟Dom实现\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v("、编译模板的优化\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),t._v("、更高效的组件初始化\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.4")]),t._v("、undate性能提高"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("倍\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),t._v("、"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SSR")]),t._v("速度提高了"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("倍\n")])])])]),t._v(" "),e("li",[t._v("体积减小"),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("通过webpack的tree"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shaking功能，可以将无用模块“剪辑”，仅打包需要的\n")])])])]),t._v(" "),e("li",[t._v("更易维护"),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("compositon Api\n\n")])])])]),t._v(" "),e("li",[t._v("更好的Typescript支持")]),t._v(" "),e("li",[t._v("编译器重写")]),t._v(" "),e("li",[t._v("更接近原生"),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("可以自定义渲染 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v("，createRanderer\n")])])])]),t._v(" "),e("li",[t._v("更易使用"),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("响应式 Api 暴露出来，observable\n轻松识别组件重新渲染原因\n")])])])])]),t._v(" "),e("p",[t._v("参链：\n"),e("a",{attrs:{href:"https://blog.csdn.net/weixin_44475093/article/details/112386778",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试官：Vue3有了解过吗？能说说跟Vue2的区别吗？"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"八、new-vue-发生了什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#八、new-vue-发生了什么"}},[t._v("#")]),t._v(" 八、new Vue()发生了什么")]),t._v(" "),e("p",[t._v("20220219 海淀图书馆（北区）F3"),e("br"),t._v("\n参链："),e("a",{attrs:{href:"https://juejin.cn/post/6844903874612953096",target:"_blank",rel:"noopener noreferrer"}},[t._v("new Vue到底发生了什么（2.0）"),e("OutboundLink")],1)]),t._v(" "),e("ol",[e("li",[t._v("Vue实例")]),t._v(" "),e("li",[t._v("初始化和挂载：初始化生命周期、事件、 props、 methods、 data、 computed 与 watch 等，最重要的是通过 Object.defineProperty 设置 setter 与 getter 函数，用来实现「响应式」以及「依赖收集」。")]),t._v(" "),e("li",[t._v("编译：compile编译可以分成 parse、optimize 与 generate 三个阶段，最终需要得到 render function。")]),t._v(" "),e("li",[t._v("响应式")]),t._v(" "),e("li",[t._v("Virtual DOM：render function 会被转化成 VNode 节点。")]),t._v(" "),e("li",[t._v("更新视图")])]),t._v(" "),e("h2",{attrs:{id:"参链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参链"}},[t._v("#")]),t._v(" 参链")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/101330697",target:"_blank",rel:"noopener noreferrer"}},[t._v("12道vue高频原理面试题,你能答出几道?"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);